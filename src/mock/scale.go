// Code generated by MockGen. DO NOT EDIT.
// Source: src/domain/scale.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/scale/src/domain"
)

// MockScaleUsecase is a mock of ScaleUsecase interface.
type MockScaleUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockScaleUsecaseMockRecorder
}

// MockScaleUsecaseMockRecorder is the mock recorder for MockScaleUsecase.
type MockScaleUsecaseMockRecorder struct {
	mock *MockScaleUsecase
}

// NewMockScaleUsecase creates a new mock instance.
func NewMockScaleUsecase(ctrl *gomock.Controller) *MockScaleUsecase {
	mock := &MockScaleUsecase{ctrl: ctrl}
	mock.recorder = &MockScaleUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScaleUsecase) EXPECT() *MockScaleUsecaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockScaleUsecase) Create(param *domain.Scale) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", param)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockScaleUsecaseMockRecorder) Create(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockScaleUsecase)(nil).Create), param)
}

// Delete mocks base method.
func (m *MockScaleUsecase) Delete(date string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", date)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockScaleUsecaseMockRecorder) Delete(date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockScaleUsecase)(nil).Delete), date)
}

// GetScale mocks base method.
func (m *MockScaleUsecase) GetScale(date string) ([]domain.Scale, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScale", date)
	ret0, _ := ret[0].([]domain.Scale)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScale indicates an expected call of GetScale.
func (mr *MockScaleUsecaseMockRecorder) GetScale(date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScale", reflect.TypeOf((*MockScaleUsecase)(nil).GetScale), date)
}

// GetScales mocks base method.
func (m *MockScaleUsecase) GetScales() (*domain.ScaleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScales")
	ret0, _ := ret[0].(*domain.ScaleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScales indicates an expected call of GetScales.
func (mr *MockScaleUsecaseMockRecorder) GetScales() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScales", reflect.TypeOf((*MockScaleUsecase)(nil).GetScales))
}

// Update mocks base method.
func (m *MockScaleUsecase) Update(param *domain.Scale) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", param)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockScaleUsecaseMockRecorder) Update(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockScaleUsecase)(nil).Update), param)
}

// MockScaleRepository is a mock of ScaleRepository interface.
type MockScaleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockScaleRepositoryMockRecorder
}

// MockScaleRepositoryMockRecorder is the mock recorder for MockScaleRepository.
type MockScaleRepositoryMockRecorder struct {
	mock *MockScaleRepository
}

// NewMockScaleRepository creates a new mock instance.
func NewMockScaleRepository(ctrl *gomock.Controller) *MockScaleRepository {
	mock := &MockScaleRepository{ctrl: ctrl}
	mock.recorder = &MockScaleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScaleRepository) EXPECT() *MockScaleRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockScaleRepository) Create(param *domain.Scale) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", param)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockScaleRepositoryMockRecorder) Create(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockScaleRepository)(nil).Create), param)
}

// Delete mocks base method.
func (m *MockScaleRepository) Delete(date time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", date)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockScaleRepositoryMockRecorder) Delete(date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockScaleRepository)(nil).Delete), date)
}

// GetScale mocks base method.
func (m *MockScaleRepository) GetScale(date time.Time) ([]domain.Scale, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScale", date)
	ret0, _ := ret[0].([]domain.Scale)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScale indicates an expected call of GetScale.
func (mr *MockScaleRepositoryMockRecorder) GetScale(date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScale", reflect.TypeOf((*MockScaleRepository)(nil).GetScale), date)
}

// GetScales mocks base method.
func (m *MockScaleRepository) GetScales() ([]domain.Scale, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScales")
	ret0, _ := ret[0].([]domain.Scale)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScales indicates an expected call of GetScales.
func (mr *MockScaleRepositoryMockRecorder) GetScales() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScales", reflect.TypeOf((*MockScaleRepository)(nil).GetScales))
}

// Update mocks base method.
func (m *MockScaleRepository) Update(param *domain.Scale) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", param)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockScaleRepositoryMockRecorder) Update(param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockScaleRepository)(nil).Update), param)
}
